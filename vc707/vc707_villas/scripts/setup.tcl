# Tcl script for re-creating project 'vc707_villas'
#
# Generated by Vivado on Tue May 19
# @author Hatim Kanchwala <hatim@hatimak.me>
#

# Get the directory where this script resides
set thisDir [file dirname [info script]]

# Source common utilities
source -notrace $thisDir/utils.tcl

set hdlRoot ./hdl
set bdHdlRoot ./bd/top/hdl
set xdcRoot ./constraints
set ipRoot ./../../ips

# Create project
create_project -force vc707_villas ./vivado/vc707_villas -part xc7vx485tffg1761-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property "board_part" "xilinx.com:vc707:part0:1.4" $obj
set_property "corecontainer.enable" "1" $obj
set_property "default_lib" "xil_defaultlib" $obj
set_property "dsa.accelerator_binary_content" "bitstream" $obj
set_property "dsa.accelerator_binary_format" "xclbin2" $obj
set_property "dsa.board_id" "vc707" $obj
set_property "dsa.description" "Vivado generated DSA" $obj
set_property "dsa.dr_bd_base_address" "0" $obj
set_property "dsa.emu_dir" "emu" $obj
set_property "dsa.flash_interface_type" "bpix16" $obj
set_property "dsa.flash_offset_address" "0" $obj
set_property "dsa.flash_size" "1024" $obj
set_property "dsa.host_architecture" "x86_64" $obj
set_property "dsa.host_interface" "pcie" $obj
set_property "dsa.num_compute_units" "60" $obj
set_property "dsa.platform_state" "pre_synth" $obj
set_property "dsa.vendor" "xilinx" $obj
set_property "dsa.version" "0.0" $obj
set_property "enable_core_container" "1" $obj
set_property "enable_vhdl_2008" "1" $obj
set_property "ip_cache_permissions" "read write" $obj
set_property "ip_output_repo" "./vivado/vc707_villas/vc707_villas.cache/ip" $obj
set_property "mem.enable_memory_map_generation" "1" $obj
set_property "sim.central_dir" "./vivado/vc707_villas/vc707_villas.ip_user_files" $obj
set_property "sim.ip.auto_export_scripts" "1" $obj
set_property "simulator_language" "Mixed" $obj
set_property "target_simulator" "ModelSim" $obj
set_property "xpm_libraries" "XPM_CDC XPM_FIFO XPM_MEMORY" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Include custom IP in Vivado repo path
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "$ipRoot" $obj

check_ip_cache -disable_cache
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "$hdlRoot/concat.v"]\
 [file normalize "$hdlRoot/aresetn_cdc.v"]\
 [file normalize "$hdlRoot/aurora_reset.v"] \
 [file normalize "$bdHdlRoot/top_wrapper.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "top_wrapper" $obj
set_property "top_auto_set" "0" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$xdcRoot/vc707_pins.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$xdcRoot/vc707_pins.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "used_in" "implementation" $file_obj
set_property "used_in_synthesis" "0" $file_obj

set file "[file normalize "$xdcRoot/vc707_pins_rtds.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$xdcRoot/vc707_pins_rtds.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

set file "[file normalize "$xdcRoot/timing.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$xdcRoot/timing.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

set file "[file normalize "$xdcRoot/bitstream.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$xdcRoot/bitstream.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "[file normalize "$xdcRoot/bitstream.xdc"]" $obj
set_property "target_ucf" "[file normalize "$xdcRoot/bitstream.xdc"]" $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "top_wrapper" $obj
set_property "top_auto_set" "0" $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Proc to create BD top
#  created by "write_bd_tcl -include_layout path/to/scripts/bd.tcl"
source ./scripts/bd.tcl
set_property REGISTERED_WITH_MANAGER "1" [get_files top.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files top.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7vx485tffg1761-2 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7vx485tffg1761-2 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
set_property "needs_refresh" "1" $obj
set_property "strategy" "Vivado Implementation Defaults" $obj
set_property "steps.write_bitstream.args.raw_bitfile" "1" $obj
set_property "steps.write_bitstream.args.bin_file" "1" $obj
set_property "steps.write_bitstream.args.readback_file" "0" $obj
set_property "steps.write_bitstream.args.verbose" "0" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:vc707_villas"
